# Configure the Azure Provider
provider "azurerm" {
  features {}
}

# Resource Group
resource "azurerm_resource_group" "main" {
  name     = "metrics-advisor-rg"
  location = "East US"
}

# Storage Account for Metrics Data
resource "azurerm_storage_account" "metrics_storage" {
  name                     = "metricsadvisorstg"
  resource_group_name      = azurerm_resource_group.main.name
  location                 = azurerm_resource_group.main.location
  account_tier             = "Standard"
  account_replication_type = "LRS"

  tags = {
    Environment = "Production"
  }
}

resource "azurerm_storage_container" "metrics_container" {
  name                  = "metricsdata"
  storage_account_name  = azurerm_storage_account.metrics_storage.name
  container_access_type = "private"
}

# Application Insights
resource "azurerm_application_insights" "app_insights" {
  name                = "metrics-advisor-appinsights"
  location            = azurerm_resource_group.main.location
  resource_group_name = azurerm_resource_group.main.name
  application_type    = "web"

  tags = {
    Environment = "Production"
  }
}

# Metrics Advisor Cognitive Services Account
resource "azurerm_cognitive_account" "metrics_advisor" {
  name                = "metrics-advisor-instance"
  location            = azurerm_resource_group.main.location
  resource_group_name = azurerm_resource_group.main.name
  kind                = "MetricsAdvisor"
  sku_name            = "S0"

  properties {
    api_properties {
      disable_local_auth = false
    }
  }

  tags = {
    Environment = "Production"
  }
}

# Data Feed Configuration for Application Insights
resource "azurerm_metrics_advisor_data_feed" "app_insights_data_feed" {
  name                   = "AppInsightsDataFeed"
  cognitive_account_id   = azurerm_cognitive_account.metrics_advisor.id
  data_source_type       = "AzureApplicationInsights"
  authentication_type    = "Basic"
  data_source_parameters {
    application_insights_id = azurerm_application_insights.app_insights.id
    query                   = "requests | summarize count() by bin(timestamp, 1h)"
  }

  granularity {
    granularity_name = "Hourly"
  }

  ingestion_settings {
    ingestion_start_time = "2025-01-01T00:00:00Z"
    data_source_request_concurrency = 5
  }

  schema {
    metric_columns = ["request_count"]
    dimension_columns = ["region", "response_code"]
  }
}

# Data Feed Configuration for Splunk
resource "azurerm_metrics_advisor_data_feed" "splunk_data_feed" {
  name                 = "SplunkDataFeed"
  cognitive_account_id = azurerm_cognitive_account.metrics_advisor.id
  data_source_type     = "Splunk"

  data_source_parameters {
    host      = "splunk.example.com" # Replace with your Splunk server URL
    port      = "8089"               # Replace with your Splunk port
    token     = "splunk-auth-token"  # Replace with your Splunk auth token
    query     = "search index=main | stats count by _time" # Replace with your Splunk query
  }

  granularity {
    granularity_name = "Hourly"
  }

  ingestion_settings {
    ingestion_start_time = "2025-01-01T00:00:00Z"
    data_source_request_concurrency = 5
  }

  schema {
    metric_columns    = ["event_count"]
    dimension_columns = ["host", "source"]
  }
}

# Anomaly Detection Configuration for Splunk
resource "azurerm_metrics_advisor_anomaly_detection_configuration" "splunk_anomaly_config" {
  name                    = "SplunkAnomalyDetectionConfig"
  cognitive_account_id    = azurerm_cognitive_account.metrics_advisor.id
  data_feed_id            = azurerm_metrics_advisor_data_feed.splunk_data_feed.id

  metric_id               = "event_count" # Match with the metric column
  detection_conditions {
    condition_operator = "Or"

    smart_detection_condition {
      sensitivity = 75
      anomaly_detector_direction = "Both"
    }
  }
}

# Notification Hook (Email)
resource "azurerm_metrics_advisor_hook_email" "email_hook" {
  name                 = "EmailAlertHook"
  cognitive_account_id = azurerm_cognitive_account.metrics_advisor.id
  email_addresses      = ["your-email@example.com"]
}

# Alert Configuration
resource "azurerm_metrics_advisor_alert_configuration" "splunk_alert_config" {
  name                                 = "SplunkMetricsAlert"
  cognitive_account_id                 = azurerm_cognitive_account.metrics_advisor.id
  data_feed_id                         = azurerm_metrics_advisor_data_feed.splunk_data_feed.id
  anomaly_detection_configuration_ids = [azurerm_metrics_advisor_anomaly_detection_configuration.splunk_anomaly_config.id]
  hook_ids                             = [azurerm_metrics_advisor_hook_email.email_hook.id]
}

# Outputs
output "metrics_advisor_endpoint" {
  value = azurerm_cognitive_account.metrics_advisor.endpoint
}

output "splunk_data_feed_id" {
  value = azurerm_metrics_advisor_data_feed.splunk_data_feed.id
}

output "splunk_anomaly_detection_configuration_id" {
  value = azurerm_metrics_advisor_anomaly_detection_configuration.splunk_anomaly_config.id
}

output "splunk_alert_configuration_id" {
  value = azurerm_metrics_advisor_alert_configuration.splunk_alert_config.id
}